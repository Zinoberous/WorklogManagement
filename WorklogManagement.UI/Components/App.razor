<!DOCTYPE html>
<html lang="en">

<head>
    <base href="/" />
    <meta charset="utf-8" />
    <link rel="icon" href="favicon.ico" />
    <link rel="stylesheet" href="app.css" />
    <link rel="stylesheet" href="WorklogManagement.UI.styles.css" />
    <HeadOutlet />
    <RadzenTheme Theme="material-dark" @rendermode="InteractiveAuto" />
</head>

<body>
    <Routes @rendermode="InteractiveServer" />
    <script src="_framework/blazor.web.js"></script>
    <script src="_content/Radzen.Blazor/Radzen.Blazor.js?v=@(typeof(Radzen.Colors).Assembly.GetName().Version)"></script>
    <script>
        function initializeEditorTabKeyHandling(editorElement) {
        editorElement.addEventListener('keydown', function (e) {
        if (e.key === 'Tab') {
        e.preventDefault();
        document.execCommand('insertText', false, '\t');
        }
        });
        }

        function insertEditorHtml(editorElement, html) {
        // Erstelle das neue HTML-Element
        const tempDiv = document.createElement('div');
        tempDiv.innerHTML = html;

        const newElement = tempDiv.firstChild;

        // Finde den Hauptcontainer
        const contentContainer = editorElement.querySelector('.rz-html-editor-content');

        // Ermittle die aktuelle Cursorposition
        const selection = window.getSelection();

        let range;

        try {
        range = selection.getRangeAt(0);
        } catch {
        range = null;
        }

        let currentElement = range ? range.startContainer : null;

        // Falls der Cursor nicht im Editor ist oder die Range ung체ltig ist
        if (!currentElement || !contentContainer.contains(currentElement)) {
        contentContainer.appendChild(newElement);
        }
        else
        {
        // Iteriere nach oben, um das n채chste Top-Level-Element zu finden
        while (currentElement && currentElement.parentElement !== contentContainer) {
        currentElement = currentElement.parentElement;
        }

        // F체ge das neue HTML nach dem aktuellen Top-Level-Element ein
        if (currentElement.nextSibling) {
        contentContainer.insertBefore(newElement, currentElement.nextSibling);
        } else {
        contentContainer.appendChild(newElement);
        }
        }

        // Positioniere den Cursor hinter dem <br>-Tag
        const brElement = newElement.querySelector('br');
        if (brElement) {
        const newRange = document.createRange();
        newRange.setStartAfter(brElement);
        newRange.collapse(true);

        selection.removeAllRanges();
        selection.addRange(newRange);
        }

        // Setze den Fokus zur체ck auf den Editor
        editorElement.focus();
        }
    </script>
</body>

</html>
