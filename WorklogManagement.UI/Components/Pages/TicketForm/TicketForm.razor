@page "/tickets/{id:int}"
@inherits BasePage<TicketFormViewModel>

<PageTitle>Ticket #@Id</PageTitle>

<div class="ticket">
    <Body>
        <AsyncContent IsLoading="@ViewModel.IsLoading">
            <FlexCol>
                <FlexRow>
                    <FlexFill>
                        <RadzenTextBox Placeholder="Titel:" @bind-Value="ViewModel.Title" />
                    </FlexFill>
                    <span style="display: flex; cursor: pointer;" @onclick="ViewModel.OpenAttachmentsDialog">
                        <RadzenIcon Icon="attach_file" />
                        @ViewModel.Attachments.Count()
                    </span>
                    <TicketStatusDropDown @bind-Value="ViewModel.Status" />
                    @if (string.IsNullOrEmpty(ViewModel.StatusNote))
                    {
                        <RadzenIcon Icon="chat_bubble" @onclick="ViewModel.OpenStatusNoteDialog" />
                    }
                    else
                    {
                        <RadzenIcon Icon="chat" @onclick="ViewModel.OpenStatusNoteDialog" />
                    }
                    @* TODO: open ticket status log dialog <RadzenIcon Icon="history" /> *@
                    <RadzenIcon Icon="alarm_on" @onclick="ViewModel.OpenWorklogsDialog" title="@TimeSpent" />
                    <RadzenIcon Icon="delete" @onclick="ViewModel.DeleteTicketAsync" />
                </FlexRow>
                <FlexRow>
                    <FlexFill>
                        <TicketSearch Placeholder="Referenz:" @bind-Value="ViewModel.Ref" AllowClear />
                    </FlexFill>
                    @if (ViewModel.Ref is not null)
                    {
                        <a href="tickets/@ViewModel.Ref.Id" style="align-self: end;">
                            <RadzenIcon Icon="open_in_new" />
                        </a>
                    }
                    else
                    {
                        <RadzenIcon Icon="open_in_new" Style="opacity: .5; cursor: default;" />
                    }
                </FlexRow>
                <FlexFill>
                    <Editor @bind-Value="ViewModel.Description" Placeholder="Beschreibung:" />
                </FlexFill>
            </FlexCol>
            <AttachmentsDialog
                @bind-IsOpen="ViewModel.IsOpenAttachmentsDialog"
                Title="Anhänge"
                Attachments="@ViewModel.Attachments"
                AttachmentsChanged="@ViewModel.AttachmentsChanged"
            />
            <Dialog @bind-IsOpen="@ViewModel.IsOpenStatusNoteDialog" Title="Anmerkung zum Status">
                <Editor @bind-Value="ViewModel.StatusNote" Placeholder="Statusanmerkung:" />
            </Dialog>
            @* TODO: Ticket status log *@
            <Dialog @bind-IsOpen="ViewModel.IsOpenWorklogsDialog" Title="@TimeSpent">
                <FlexCol>
                    <RadzenButton Text="Hinzufügen" Click="() => ViewModel.SaveWorklogAsync()" Style="width: fit-content;" />
                    @foreach (var worklog in ViewModel.Worklogs)
                    {
                        <TicketFormWorklogEntry @key="worklog.Id" Worklog="@worklog" OnEdit="@ViewModel.SaveWorklogAsync" OnDelete="@(() => ViewModel.DeleteWorklogAsync(worklog))" />
                    }
                    @* leerer Editor, dient dazu die Breite vom Dialog einheitlich zu halten *@
                    <Editor style="visibility: hidden; height: 0;" />
                </FlexCol>
            </Dialog>
        </AsyncContent>
    </Body>
</div>
