@page "/"
@inherits BasePage<HomeViewModel>

@using WorklogManagement.Shared.Enums
@using WorklogManagement.UI.Extensions

<PageTitle>Startseite</PageTitle>

<div class="home">
    <Body>
        <RadzenPanel>
            <FlexCol>
                <FlexRow>
                    <AsyncContent IsLoading="@ViewModel.LoadCalendarStatistics">
                        <RadzenIcon Icon="info" @onclick="() => IsOpenCalendarStatisticsDialog = true" Style="cursor: pointer; font-size: xxx-large;" />
                    </AsyncContent>
                    <YearPicker @bind-Value="ViewModel.SelectedYear" OnChanged="@ViewModel.OnSelectedYearChanged" />
                    <RadzenDropDown @bind-Value="ViewModel.SelectedFederalState" SelectedItemChanged="@ViewModel.OnSelectedFederalStateChanged" Data="@FederalStates" ValueProperty="Key" TextProperty="Value" />
                    <FlexFill/>
                    <div style="margin-right: 50px;">
                        <AsyncContent IsLoading="@ViewModel.LoadOvertime" RenderMode="@Enums.AsyncContentRenderMode.WhileLoading">
                            <div class="overtime">
                                <div style="text-align:center;">Ãœberstunden: @ViewModel.Overtime.Total.ToTimeString()</div>
                                <div>
                                    (@WorkTimeLabels[WorkTimeType.Office]: @ViewModel.Overtime.Office.ToTimeString() /
                                    @WorkTimeLabels[WorkTimeType.Mobile]: @ViewModel.Overtime.Mobile.ToTimeString())
                                </div>
                            </div>
                        </AsyncContent>
                    </div>
                </FlexRow>
                <FlexFill>
                    <div style="@CalendarStyle">
                        <AsyncContent IsLoading="@ViewModel.LoadCalendar" RenderMode="@Enums.AsyncContentRenderMode.WhileLoading">
                            <RadzenDataGrid Data="@CalendarData" AllowAlternatingRows="false" GridLines="DataGridGridLines.Both">
                                <Columns>
                                    <RadzenDataGridColumn Frozen Width="50px" CssClass="month">
                                        <Template>
                                            <div>
                                                <div>@MonthLabelShorts[context.Month - 1]</div>
                                                @if (context.Year != ViewModel.SelectedYear)
                                                {
                                                    <div>@context.Year</div>
                                                }
                                            </div>
                                        </Template>
                                    </RadzenDataGridColumn>
                                    @foreach (var day in Enumerable.Range(1, 31))
                                    {
                                        <RadzenDataGridColumn Title="@($"{day}".PadLeft(2, '0'))" Width="50px" CssClass="day">
                                            <Template>
                                                @if (day <= DateTime.DaysInMonth(context.Year, context.Month))
                                                {
                                                    <HomeCalendarDay
                                                        Date="@(new DateOnly(context.Year, context.Month, day))"
                                                        WorkTimes="@context.Days.ElementAt(day - 1).WorkTimes"
                                                        Absences="@context.Days.ElementAt(day - 1).Absences"
                                                        Holiday="@context.Days.ElementAt(day - 1).Holiday"
                                                    />
                                                }
                                            </Template>
                                        </RadzenDataGridColumn>
                                    }
                                </Columns>
                            </RadzenDataGrid>
                        </AsyncContent>
                    </div>
                </FlexFill>
            </FlexCol>
        </RadzenPanel>
        <Dialog @bind-IsOpen="IsOpenCalendarStatisticsDialog">
            <ul>
                <li>@CalendarEntryLabels[CalendarEntryType.Office]: <strong>@ViewModel.CalendarStatistics[CalendarEntryType.Office]</strong></li>
                <li>@CalendarEntryLabels[CalendarEntryType.Mobile]: <strong>@ViewModel.CalendarStatistics[CalendarEntryType.Mobile]</strong></li>
                <li>@CalendarEntryLabels[CalendarEntryType.Holiday]: <strong>@ViewModel.CalendarStatistics[CalendarEntryType.Holiday]</strong></li>
                <li>@CalendarEntryLabels[CalendarEntryType.Vacation]: <strong>@ViewModel.CalendarStatistics[CalendarEntryType.Vacation]</strong></li>
                <li>@CalendarEntryLabels[CalendarEntryType.TimeCompensation]: <strong>@ViewModel.CalendarStatistics[CalendarEntryType.TimeCompensation]</strong></li>
                <li>@CalendarEntryLabels[CalendarEntryType.Ill]: <strong>@ViewModel.CalendarStatistics[CalendarEntryType.Ill]</strong></li>
            </ul>
        </Dialog>
    </Body>
</div>
