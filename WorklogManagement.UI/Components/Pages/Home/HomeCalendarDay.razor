@using WorklogManagement.Shared.Enums
@using WorklogManagement.UI.Extensions

<div class="day" title="@Holiday?.Name" style="@GetDayColoring()">
    <div>
        <span class="@GetWeekDayClassName()" title="@GetWeekDayTitle()">
            @DayLabelShorts[(int)Date.DayOfWeek]
        </span>
        @if (Date.DayOfWeek == DayOfWeek.Monday)
        {
            <span class="weeknumber">
                @Date.GetWeekOfYear()
            </span>
        }
    </div>
    <div>
        @if (WorkTimes.Any(x => x.Actual == TimeSpan.Zero))
        {
            var timeCompensations = WorkTimes.Where(x => x.Actual == TimeSpan.Zero).ToArray();

            var duration = TimeSpan.FromTicks(timeCompensations.Sum(x => x.Expected.Ticks));

            var notes = timeCompensations
                .Where(x => !string.IsNullOrWhiteSpace(x.Note) && !x.Note.Equals("Zeitausgleich", StringComparison.OrdinalIgnoreCase))
                .Select(x => $"{x.Expected:HH:mm} => {x.Note}")
                .ToArray();

            var note = string.Join("\n", notes);

            <RadzenIcon Icon="@_timeCompensationIcon" title="@GetIconTitle("Zeitausgleich", duration, note)" />
        }
        @foreach(var workTime in WorkTimes.Where(x => x.Actual > TimeSpan.Zero).OrderBy(x => x.Type))
        {
            var label = workTime.Type switch
            {
                WorkTimeType.Office => "BÃ¼ro",
                WorkTimeType.Mobile => "Mobil",
                _ => "Unbekannt"
            };

            <RadzenIcon Icon="@_workTimeIcons[workTime.Type]" title="@GetIconTitle(label, workTime.Actual, workTime.Note)" />
        }
        @foreach (var absence in Absences.OrderBy(x => x.Type))
        {
            var label = absence.Type switch
            {
                AbsenceType.Holiday => "Feiertag",
                AbsenceType.Vacation => "Urlaub",
                AbsenceType.Ill => "Krank",
                _ => "Unbekannt"
            };

            <RadzenIcon Icon="@_absenceIcons[absence.Type]" title="@GetIconTitle(label, absence.Duration, absence.Note)" />
        }
    </div>
</div>
